import { useIsLoading, useMenu } from "@/store/store";
import {AnimatePresence,motion} from 'framer-motion'
import { useEffect, useState } from "react";
import Header from "./header";
import Menu from "./menu";

type props={
    children:JSX.Element
}
const Layout:React.FC<props> = ({children}) => {

    const {isLoading,setIsLoading}=useIsLoading()

    useEffect(() => {
        const timer = setTimeout(() => {
          setIsLoading(false)
        }, 2700);
        return () => clearTimeout(timer);
      }, []);
      
    
    const {menuIsOpen}=useMenu()
    return ( 
    <div  className={`${menuIsOpen?'max-h-screen overflow-hidden':'min-h-screen'} bg-slate-300`}>
              <AnimatePresence>

              {isLoading&&  <div className="absolute top-0 left-0 right-0 bottom-0 overflow-hidden  z-50">

             
             <motion.div
      initial={{
        scale:1
      }}
      animate={{ scale:5 ,opacity:0 }}
      transition={{ duration: 1, delay: 1.5 ,ease:'easeOut',stiffness:'10',bounce:'10'}}
      className=" h-full w-full flex justify-center items-center  translate-x-40 -translate-y-1/2 border"
    >
    <svg width="154"
        height="91"  viewBox="0 0 183 177" fill="none" xmlns="http://www.w3.org/2000/svg">
<motion.rect initial={{pathLength:0,fillOpacity:0}} animate={{pathLength:1,fillOpacity:1}} strokeWidth={3} transition={{duration:1,fillOpacity:{delay:1,duration:0.5}}} y="21" width="135" height="156" stroke='#4E4832' fill="#4E4832"/>
<motion.path initial={{pathLength:0,fillOpacity:0}} animate={{pathLength:1,fillOpacity:1}} strokeWidth={3} transition={{duration:1,fillOpacity:{delay:1,duration:0.5}}} d="M182.659 48H165.045C164.004 42.9337 162.181 38.483 159.577 34.6477C157.02 30.8125 153.895 27.5928 150.202 24.9886C146.556 22.3371 142.508 20.3485 138.057 19.0227C133.606 17.697 128.966 17.0341 124.136 17.0341C115.33 17.0341 107.351 19.2595 100.202 23.7102C93.0994 28.161 87.4413 34.7188 83.2273 43.3835C79.0606 52.0483 76.9773 62.678 76.9773 75.2727C76.9773 87.8674 79.0606 98.4972 83.2273 107.162C87.4413 115.827 93.0994 122.384 100.202 126.835C107.351 131.286 115.33 133.511 124.136 133.511C128.966 133.511 133.606 132.848 138.057 131.523C142.508 130.197 146.556 128.232 150.202 125.628C153.895 122.976 157.02 119.733 159.577 115.898C162.181 112.015 164.004 107.564 165.045 102.545H182.659C181.333 109.979 178.919 116.632 175.415 122.503C171.911 128.374 167.555 133.369 162.347 137.489C157.138 141.561 151.291 144.662 144.804 146.793C138.365 148.923 131.475 149.989 124.136 149.989C111.731 149.989 100.699 146.958 91.0398 140.898C81.3807 134.837 73.7813 126.22 68.2415 115.045C62.7017 103.871 59.9318 90.6136 59.9318 75.2727C59.9318 59.9318 62.7017 46.6742 68.2415 35.5C73.7813 24.3258 81.3807 15.7083 91.0398 9.64773C100.699 3.58712 111.731 0.556813 124.136 0.556813C131.475 0.556813 138.365 1.62215 144.804 3.75284C151.291 5.88352 157.138 9.00852 162.347 13.1278C167.555 17.1998 171.911 22.1714 175.415 28.0426C178.919 33.8665 181.333 40.5189 182.659 48Z" stroke='#776855' fill="#776855"/>
<motion.path initial={{pathLength:0,fillOpacity:0}} animate={{pathLength:1,fillOpacity:1}} strokeWidth={3} transition={{duration:1,fillOpacity:{delay:1,duration:0.5}}} d="M89.1818 75.1818C88.6364 70.5758 86.4242 67 82.5455 64.4545C78.6667 61.9091 73.9091 60.6364 68.2727 60.6364C64.1515 60.6364 60.5455 61.303 57.4545 62.6364C54.3939 63.9697 52 65.803 50.2727 68.1364C48.5758 70.4697 47.7273 73.1212 47.7273 76.0909C47.7273 78.5758 48.3182 80.7121 49.5 82.5C50.7121 84.2576 52.2576 85.7273 54.1364 86.9091C56.0152 88.0606 57.9848 89.0151 60.0455 89.7727C62.1061 90.5 64 91.0909 65.7273 91.5455L75.1818 94.0909C77.6061 94.7273 80.303 95.6061 83.2727 96.7273C86.2727 97.8485 89.1364 99.3788 91.8636 101.318C94.6212 103.227 96.8939 105.682 98.6818 108.682C100.47 111.682 101.364 115.364 101.364 119.727C101.364 124.758 100.045 129.303 97.4091 133.364C94.803 137.424 90.9848 140.652 85.9545 143.045C80.9545 145.439 74.8788 146.636 67.7273 146.636C61.0606 146.636 55.2879 145.561 50.4091 143.409C45.5606 141.258 41.7424 138.258 38.9545 134.409C36.197 130.561 34.6364 126.091 34.2727 121H45.9091C46.2121 124.515 47.3939 127.424 49.4545 129.727C51.5455 132 54.1818 133.697 57.3636 134.818C60.5758 135.909 64.0303 136.455 67.7273 136.455C72.0303 136.455 75.8939 135.758 79.3182 134.364C82.7424 132.939 85.4545 130.97 87.4545 128.455C89.4545 125.909 90.4545 122.939 90.4545 119.545C90.4545 116.455 89.5909 113.939 87.8636 112C86.1364 110.061 83.8636 108.485 81.0455 107.273C78.2273 106.061 75.1818 105 71.9091 104.091L60.4545 100.818C53.1818 98.7273 47.4242 95.7424 43.1818 91.8636C38.9394 87.9848 36.8182 82.9091 36.8182 76.6364C36.8182 71.4242 38.2273 66.8788 41.0455 63C43.8939 59.0909 47.7121 56.0606 52.5 53.9091C57.3182 51.7273 62.697 50.6364 68.6364 50.6364C74.6364 50.6364 79.9697 51.7121 84.6364 53.8636C89.303 55.9848 93 58.8939 95.7273 62.5909C98.4849 66.2879 99.9394 70.4848 100.091 75.1818H89.1818Z" stroke='#9C917F' fill="#9C917F"/>
</svg>


  
    </motion.div>
    </div>}
            {menuIsOpen&&<Menu/>}
              </AnimatePresence>
           {!isLoading&& <div className="min-h-[calc(100vh-112px)] ">
                    <Header/>
                    {children}
            </div>}


    </div> );
}
 
export default Layout;